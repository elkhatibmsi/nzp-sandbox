{#
/**
* @file
* Default theme implementation to display a paragraph.
*
* Available variables:
* - paragraph: Full paragraph entity.
* Only method names starting with "get", "has", or "is" and a few common
* methods such as "id", "label", and "bundle" are available. For example:
* - paragraph.getCreatedTime() will return the paragraph creation timestamp.
* - paragraph.id(): The paragraph ID.
* - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
* - paragraph.getOwnerId(): The user ID of the paragraph author.
* See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
* and methods for the paragraph object.
* - content: All paragraph items. Use {{ content }} to print them all,
* or print a subset such as {{ content.field_example }}. Use
* {{ content|without('field_example') }} to temporarily suppress the printing
* of a given child element.
* - attributes: HTML attributes for the containing element.
* The attributes.class element may contain one or more of the following
* classes:
* - paragraphs: The current template type (also known as a "theming hook").
* - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
* "Image" it would result in "paragraphs--type--image". Note that the machine
* name will often be in a short form of the human readable label.
* - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
* preview would result in: "paragraphs--view-mode--preview", and
* default: "paragraphs--view-mode--default".
* - view_mode: View mode; for example, "preview" or "full".
* - logged_in: Flag for authenticated user status. Will be true when the
* current user is a logged-in member.
* - is_admin: Flag for admin user status. Will be true when the current user
* is an administrator.
*
* @see template_preprocess_paragraph()
*
* @ingroup themeable
*/
#}

{{ attach_library('theme_nzp/alpinejs') }}
{{ attach_library('theme_nzp/swiperjs') }}


{%
set classes = [
'paragraph',
'paragraph--type--' ~ paragraph.bundle|clean_class,
view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
not paragraph.isPublished() ? 'paragraph--unpublished'
]
%}


{%
set slides = content.field_image
%}

{%
set caption = content.field_slideshow_caption
%}

{% block paragraph %}
	<div{{attributes.addClass(classes)}}>
		<!-- carousel -->
		<div x-data="{swiper: null}" x-init="swiper = new Swiper($refs.container, {
			      loop: true,
			      slidesPerView: 1,
			      spaceBetween: 0,
			
			      breakpoints: {
			        640: {
			          slidesPerView: 1,
			          spaceBetween: 0,
			        },
			        768: {
			          slidesPerView: 1,
			          spaceBetween: 0,
			        },
			        1024: {
			          slidesPerView: 1,
			          spaceBetween: 0,
			        },
			      },
			    })" class="relative w-10/12 mx-auto flex flex-row">
			<div class="absolute inset-y-0 left-0 z-10 flex items-center">
				<button @click="swiper.slidePrev()" class="bg-white -ml-2 lg:-ml-4 flex justify-center items-center w-10 h-10 rounded-full shadow focus:outline-none">
					<svg viewbox="0 0 20 20" fill="currentColor" class="chevron-left w-6 h-6">
						<path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"></path>
					</svg>
				</button>
			</div>

			<div class="swiper-container" x-ref="container">
				<div
					class="swiper-wrapper">
					<!-- Slides -->
					{% for key, slide in slides if key|first != '#' %}
						<div class="swiper-slide p-4">
							{{ slide }}
							{{ caption }}
						</div>
					{% endfor %}
				</div>
				<div class="absolute inset-y-0 right-0 z-10 flex items-center">
					<button @click="swiper.slideNext()" class="bg-white -mr-2 lg:-mr-4 flex justify-center items-center w-10 h-10 rounded-full shadow focus:outline-none">
						<svg viewbox="0 0 20 20" fill="currentColor" class="chevron-right w-6 h-6">
							<path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
						</svg>
					</button>
				</div>
			</div>

		</div>
</div>
	{% endblock paragraph %}
